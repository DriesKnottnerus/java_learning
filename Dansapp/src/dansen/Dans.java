/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dansen;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;
import javax.swing.Timer;

/**
 *
 * @author dknottne
 */
public class Dans extends javax.swing.JApplet implements DansImageProvider {

    Voet newVoet;
    Voet selectedVoet;
    Image heerLinks;
    Image heerRechts;
    Image dameLinks;
    Image dameRechts;
    Timer animationTimer;
    boolean animationActive;

    // these are provisionally: they will be part of the dance figure
    int tempo; // tempo in beats per minute

    public Dans() {
        this.animationActive = false;
        this.tempo = 60;
    }

    /**
     * Initializes the applet Dans
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                @Override
                public void run() {
                    resize(1200, 700);
                    initComponents();
                    initOther();
                }
            });
        } catch (InterruptedException | InvocationTargetException ex) {
            ex.printStackTrace();
        }
    }

    private void initOther() {
        // newVoet us used to remember what foot was last chosen; default is HEER - LINKS       
        newVoet = new Voet(this);
        newVoet.setSex(Sex.HEER);
        newVoet.setSoortVoet(SoortVoet.LINKS);

        // selectedVoet points to the selected foot (click it on the panel)
        selectedVoet = null;

        // load the images
        /*
         heerLinks = getImage((getClass().getResource("/resources/heerlinks.gif")));
         heerRechts = getImage((getClass().getResource("/resources/heerrechts.gif")));
         dameLinks = getImage((getClass().getResource("/resources/damelinks.gif")));
         dameRechts = getImage((getClass().getResource("/resources/damerechts.gif")));
         */
        try {
            heerLinks = ImageIO.read(getClass().getResource("/resources/heerlinks.gif"));
            heerRechts = ImageIO.read(getClass().getResource("/resources/heerrechts.gif"));
            dameLinks = ImageIO.read(getClass().getResource("/resources/damelinks.gif"));
            dameRechts = ImageIO.read(getClass().getResource("/resources/damerechts.gif"));
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        dansJPanel1 = new dansen.DansJPanel();

        jButton6.setText("jButton6");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Keuze", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Aharoni", 1, 12))); // NOI18N

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/heerlinks.gif"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/damelinks.gif"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/heerrechts.gif"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/damerechts.gif"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Animation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Aharoni", 1, 12))); // NOI18N

        jButton7.setText("Start");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("Stop");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jButton9))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton9))
                .addGap(0, 77, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                    .addComponent(jButton1)))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton2, jButton3, jButton4, jButton5});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jButton3))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(49, 49, 49)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jButton3, jButton4, jButton5});

        dansJPanel1.setBackground(new java.awt.Color(255, 255, 255));
        dansJPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dansvloer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Aharoni", 1, 12))); // NOI18N
        dansJPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dansJPanel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dansJPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dansJPanel1MouseReleased(evt);
            }
        });
        dansJPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dansJPanel1MouseDragged(evt);
            }
        });

        javax.swing.GroupLayout dansJPanel1Layout = new javax.swing.GroupLayout(dansJPanel1);
        dansJPanel1.setLayout(dansJPanel1Layout);
        dansJPanel1Layout.setHorizontalGroup(
            dansJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
        );
        dansJPanel1Layout.setVerticalGroup(
            dansJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dansJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(29, 29, 29))
                    .addComponent(dansJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // clear the panel
        dansJPanel1.getVoeten().clear();
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dansJPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dansJPanel1MouseDragged
        if (dansJPanel1.getDraggingStart() != null) {
            dansJPanel1.setDraggingEnd(new PointD(evt.getX(), evt.getY()));
            repaint();
        }
    }//GEN-LAST:event_dansJPanel1MouseDragged

    private void dansJPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dansJPanel1MouseReleased
        if (dansJPanel1.getDraggingStart() != null) {
            dansJPanel1.setDraggingEnd(new PointD(evt.getX(), evt.getY()));
            //       System.out.println("MouseReleased, start" + dansJPanel1.getDraggingStart());
            //       System.out.println("MouseReleased, end  " + dansJPanel1.getDraggingEnd());
            if (dansJPanel1.getDraggingStart().distance(dansJPanel1.getDraggingEnd()) > 10) {

                PointD richting = new PointD(dansJPanel1.getDraggingEnd().getX() - dansJPanel1.getDraggingStart().getX(),
                        dansJPanel1.getDraggingEnd().getY() - dansJPanel1.getDraggingStart().getY());

                if (selectedVoet != null) {
                    // if a foot has been selected foot, it will be given the 
                    // new position and direction
                    selectedVoet.setPositie(dansJPanel1.getDraggingStart());
                    selectedVoet.setRichting(richting);
                    selectedVoet = null;
                } else {
                    // add a new foot to the list
                    Voet voet = new Voet(this);
                    voet.setSex(newVoet.getSex());
                    voet.setSoortVoet(newVoet.getSoortVoet());
                    voet.setRichting(richting);
                    voet.setPositie(dansJPanel1.getDraggingStart());
                    voet.setVisible(true);
                    dansJPanel1.addVoetToList(voet);
                }

                dansJPanel1.setDraggingStart(null);
                dansJPanel1.setDraggingEnd(null);
                repaint();
            }
        }
    }//GEN-LAST:event_dansJPanel1MouseReleased

    private void dansJPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dansJPanel1MousePressed
        dansJPanel1.setDraggingStart(new PointD(evt.getX(), evt.getY()));
    }//GEN-LAST:event_dansJPanel1MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Linkervoet Heer
        newVoet.setSex(Sex.HEER);
        newVoet.setSoortVoet(SoortVoet.LINKS);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Rechtervoet Heer
        newVoet.setSex(Sex.HEER);
        newVoet.setSoortVoet(SoortVoet.RECHTS);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Linkervoet Dame
        newVoet.setSex(Sex.DAME);
        newVoet.setSoortVoet(SoortVoet.LINKS);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Rechtervoet Dame
        newVoet.setSex(Sex.DAME);
        newVoet.setSoortVoet(SoortVoet.RECHTS);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void dansJPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dansJPanel1MouseClicked
        // Determine which foot has been selected: it is selected if it is closest to the clicked position, and 
        // the click has been "in its image". For now: if the distance is less than 10.
        PointD clickedOn = new PointD(evt.getX(), evt.getY());
        double minDistance = Double.MAX_VALUE;
        selectedVoet = null;
        for (Voet voet : dansJPanel1.getVoeten()) {
            if (voet.getPositie().distance(clickedOn) < Math.min(10.0, minDistance)) {
                minDistance = voet.getPositie().distance(clickedOn);
                selectedVoet = voet;
            }
        }
        /**
         * If the foot has been right-clicked, open a dialog to modify it: set
         * its delay, or remove it.
         */
        if (selectedVoet != null && evt.getButton() == MouseEvent.BUTTON3) {

            JDialog dialog = new JDialog(SwingUtilities.windowForComponent(this), "delete voet");
            
            dialog.setModal(false);
            dialog.setSize(200, 200);
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            
            JButton deleteButton = new JButton("delete");
            deleteButton.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    dansJPanel1.getVoeten().remove(selectedVoet);
                    selectedVoet = null;
                    dansJPanel1.repaint();
                }
            });
            dialog.getContentPane().add(deleteButton);
            dialog.setVisible(true);

            // int result = JOptionPane.showConfirmDialog(rootPane, "Delete", "Delete pane", JOptionPane.OK_CANCEL_OPTION);
        }
    }//GEN-LAST:event_dansJPanel1MouseClicked

    /**
     * Starts the animation of the figure.
     *
     * @param evt pushing the button
     */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        if (!dansJPanel1.getVoeten().isEmpty() && !animationActive) {
            animationTimer = new Timer(1000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // paint the next foot 
                    // First determine when it will be painted by getting the delay from the current foot.
                    float nextStepDelay = dansJPanel1.getCurrentVoet().getNextStepDelay();
                    int delay = (int) (tempo * nextStepDelay * 1000 / 60);
                    animationTimer.setDelay(delay);
                    dansJPanel1.goToNextFoot();
                    dansJPanel1.repaint();
                }
            });
            dansJPanel1.setAllInvisible();
            dansJPanel1.positionOnLastFoot();
            animationTimer.start();
            animationActive = true;
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (animationActive) {
            animationActive = false;
            animationTimer.stop();
            dansJPanel1.setAllVisible();
            dansJPanel1.repaint();
        }
    }//GEN-LAST:event_jButton9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private dansen.DansJPanel dansJPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

    @Override
    public Image getHeerLinks() {
        return heerLinks;
    }

    @Override
    public Image getHeerRechts() {
        return heerRechts;
    }

    @Override
    public Image getDameLinks() {
        return dameLinks;
    }

    @Override
    public Image getDameRechts() {
        return dameRechts;
    }

}
